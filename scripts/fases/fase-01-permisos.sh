#!/bin/bash

# ============================================================================
# FASE 1: GESTI√ìN INTELIGENTE DE PERMISOS (OPTIMIZADA)
# ============================================================================
# Gesti√≥n autom√°tica de permisos - Modular, Best Practices, L√≠neas minimizadas
# ============================================================================

set -euo pipefail

# ============================================================================
# AUTOCONTENCI√ìN Y M√ìDULOS
# ============================================================================

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Cargar autocontenci√≥n
[[ -f "$SCRIPT_DIR/../comun/autocontener.sh" ]] && source "$SCRIPT_DIR/../comun/autocontener.sh" || {
    echo "‚ùå Error: M√≥dulo de autocontenci√≥n no encontrado" >&2; exit 1
}

# Cargar helper de permisos
[[ -f "$SCRIPT_DIR/../comun/helpers/permisos-helper.sh" ]] && source "$SCRIPT_DIR/../comun/helpers/permisos-helper.sh" || {
    log_error "‚ùå Helper de permisos no encontrado"; exit 1
}

# ============================================================================
# FUNCIONES OPTIMIZADAS
# ============================================================================

# Diagn√≥stico r√°pido del contexto actual
diagnosticar_contexto() {
    log_info "üë§ Usuario: $(whoami) | UID: $EUID"
    log_info "üîë Contexto: $([[ "$EUID" -eq 0 ]] && echo "root" || echo "usuario normal")"
    
    if command -v sudo >/dev/null 2>&1; then
        log_info "‚úÖ sudo: $(verificar_sudo && echo "disponible (sin contrase√±a)" || echo "disponible (requiere contrase√±a)")"
    else
        log_warning "‚ö†Ô∏è sudo: no disponible"
    fi
}

# ============================================================================
# FUNCI√ìN PRINCIPAL OPTIMIZADA
# ============================================================================

fase_01_permisos() {
    mostrar_info_fase "01" "üîê FASE 1: Gesti√≥n Inteligente de Permisos"
    
    # Diagn√≥stico r√°pido
    diagnosticar_contexto
    
    # Gesti√≥n autom√°tica usando helper
    gestionar_permisos_automatico "permisos"
    
    log_success "‚úÖ Fase 1 completada: Permisos verificados"
}

# ============================================================================
# EJECUCI√ìN DIRECTA
# ============================================================================

# Solo ejecutar si se llama directamente (no sourced)
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    fase_01_permisos "$@"
fi
