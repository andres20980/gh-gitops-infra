#!/bin/bash

# ============================================================================
# FASE 02 DRY: GESTI√ìN DE DEPENDENCIAS DEL SISTEMA
# ============================================================================
# Responsabilidad: Orquestaci√≥n de instalaci√≥n de dependencias usando framework DRY
# Principios: Single Responsibility, DRY, Delegation Pattern
# ============================================================================

set -euo pipefail

# ============================================================================
# AUTOCONTENCI√ìN DRY
# ============================================================================

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Cargar sistema DRY
if [[ -f "$SCRIPT_DIR/../comun/bootstrap.sh" ]]; then
    # shellcheck source=../comun/bootstrap.sh
    source "$SCRIPT_DIR/../comun/bootstrap.sh"
else
    echo "‚ùå ERROR: Sistema DRY no encontrado" >&2
    exit 1
fi

# ============================================================================
# CONFIGURACI√ìN DE FASE
# ============================================================================

readonly FASE_NUMERO="02"
readonly FASE_NOMBRE="Gesti√≥n de Dependencias del Sistema"
readonly FASE_ICONO="üì¶"

# ============================================================================
# FUNCIONES DE VALIDACI√ìN DRY
# ============================================================================

# Verificar prerequisitos para Fase 02
verificar_prerequisitos_fase02() {
    log_info "üîç Verificando prerequisitos para Fase 02..."
    
    # Verificar conectividad
    if ! check_internet_connectivity; then
        return 1
    fi
    
    # Verificar privilegios sudo
    if ! check_sudo_privileges; then
        return 1
    fi
    
    log_success "‚úÖ Prerequisitos verificados"
    return 0
}

# ============================================================================
# FUNCI√ìN PRINCIPAL DRY
# ============================================================================

fase_02_dependencias() {
    # Banner informativo
    mostrar_info_fase "$FASE_NUMERO" "$FASE_ICONO FASE $FASE_NUMERO: $FASE_NOMBRE"
    
    log_info "üéØ Instalaci√≥n automatizada de herramientas base"
    log_info "üéØ Docker, kubectl, minikube, helm, git"
    log_info "üéØ Usando framework DRY de instalaci√≥n"
    
    # Verificar prerequisitos
    if ! verificar_prerequisitos_fase02; then
        log_error "‚ùå Prerequisitos no cumplidos"
        return 1
    fi
    
    # Determinar modo de operaci√≥n
    if skip_deps; then
        log_info "‚è≠Ô∏è Modo verificaci√≥n (--skip-deps activado)"
        
        if check_system_dependencies; then
            log_success "‚úÖ Fase $FASE_NUMERO completada: Dependencias verificadas"
            show_tools_summary
            return 0
        else
            log_error "‚ùå Algunas dependencias no est√°n disponibles"
            log_info "üí° Ejecuta sin --skip-deps para instalar autom√°ticamente"
            return 1
        fi
    else
        log_info "üì• Modo instalaci√≥n completa usando framework DRY"
        
        # Instalar dependencias usando framework DRY
        if install_system_dependencies; then
            log_success "‚úÖ Fase $FASE_NUMERO completada: Dependencias instaladas"
            return 0
        else
            log_error "‚ùå Fase $FASE_NUMERO fall√≥: Error en instalaci√≥n"
            return 1
        fi
    fi
}

# ============================================================================
# EJECUCI√ìN DIRECTA
# ============================================================================

# Solo ejecutar si se llama directamente (no sourced)
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    fase_02_dependencias "$@"
fi
